{"version": "https://jsonfeed.org/version/1", "title": "Algoritmos para Programa\u00e7\u00e3o Competitiva", "home_page_url": "https://paulofilipe.com/cp-algorithms/", "feed_url": "https://paulofilipe.com/cp-algorithms/feed_json_updated.json", "description": "The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.", "icon": null, "authors": [], "language": "en", "items": [{"id": "https://paulofilipe.com/cp-algorithms/navigation.html", "url": "https://paulofilipe.com/cp-algorithms/navigation.html", "title": "\ud83c\udde7\ud83c\uddf7 Navega\u00e7\u00e3o", "content_html": "<p>Artigos com a bandeira \ud83c\uddfa\ud83c\uddf8 est\u00e3o em ingl\u00eas. Artigos com a bandeira \ud83c\udde7\ud83c\uddf7 j\u00e1 foram traduzidos para o portugu\u00eas.</p>\n<ul>\n<li>P\u00e1gina Inicial<ul>\n<li>[\ud83c\udde7\ud83c\uddf7 P\u00e1gina Inicial](index....</li>\n</ul>\n</li>\n</ul>", "image": null, "date_modified": "2024-10-13T13:27:34+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/string/prefix-function.html", "url": "https://paulofilipe.com/cp-algorithms/string/prefix-function.html", "title": "\ud83c\udde7\ud83c\uddf7 Fun\u00e7\u00e3o de Prefixo - Algoritmo de Knuth\u2013Morris\u2013Pratt", "content_html": "<h1>Fun\u00e7\u00e3o de Prefixo. Algoritmo de Knuth\u2013Morris\u2013Pratt</h1>\n<h2>Defini\u00e7\u00e3o da fun\u00e7\u00e3o de prefixo</h2>\n<p>Dada uma string $s$ de comprimento $n$.\nA <strong>fun\u00e7\u00e3o de prefixo</strong> para...</p>", "image": null, "date_modified": "2024-10-13T13:27:34+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/string/rabin-karp.html", "url": "https://paulofilipe.com/cp-algorithms/string/rabin-karp.html", "title": "\ud83c\udde7\ud83c\uddf7 Algoritmo de Rabin-Karp para busca de padr\u00f5es em strings", "content_html": "<h1>Algoritmo de Rabin-Karp para busca de padr\u00f5es em strings</h1>\n<p>Este algoritmo \u00e9 baseado no conceito de hashing, ent\u00e3o se voc\u00ea n\u00e3o estiver familiarizado com hash...</p>", "image": null, "date_modified": "2024-10-12T20:28:33+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/data_structures/disjoint_set_union.html", "url": "https://paulofilipe.com/cp-algorithms/data_structures/disjoint_set_union.html", "title": "\ud83c\uddfa\ud83c\uddf8 Disjoint Set Union", "content_html": "<h1>Disjoint Set Union</h1>\n<p>This article discusses the data structure <strong>Disjoint Set Union</strong> or <strong>DSU</strong>.\nOften it is also called <strong>Union Find</strong> because of its two ...</p>", "image": null, "date_modified": "2024-10-12T07:13:20+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/others/stern_brocot_tree_farey_sequences.html", "url": "https://paulofilipe.com/cp-algorithms/others/stern_brocot_tree_farey_sequences.html", "title": "\ud83c\uddfa\ud83c\uddf8 The Stern-Brocot Tree and Farey Sequences", "content_html": "<h1>The Stern-Brocot tree and Farey sequences</h1>\n<h2>Stern-Brocot tree</h2>\n<p>The Stern-Brocot tree is an elegant construction to represent the set of all positive frac...</p>", "image": null, "date_modified": "2024-10-12T07:12:15+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/game_theory/sprague-grundy-nim.html", "url": "https://paulofilipe.com/cp-algorithms/game_theory/sprague-grundy-nim.html", "title": "\ud83c\uddfa\ud83c\uddf8 Sprague-Grundy theorem. Nim", "content_html": "<h1>Sprague-Grundy theorem. Nim</h1>\n<h2>Introduction</h2>\n<p>This theorem describes the so-called <strong>impartial</strong> two-player game,\ni.e. those in which the available moves a...</p>", "image": null, "date_modified": "2024-10-11T21:42:54+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/graph/strongly-connected-components.html", "url": "https://paulofilipe.com/cp-algorithms/graph/strongly-connected-components.html", "title": "\ud83c\uddfa\ud83c\uddf8 Strongly Connected Components and Condensation Graph", "content_html": "<h1>Strongly connected components and the condensation graph</h1>\n<h2>Definitions</h2>\n<p>Let $G=(V,E)$ be a directed graph with vertices $V$ and edges $E \\subseteq V \\time...</p>", "image": null, "date_modified": "2024-10-11T21:27:41+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/dynamic_programming/intro-to-dp.html", "url": "https://paulofilipe.com/cp-algorithms/dynamic_programming/intro-to-dp.html", "title": "\ud83c\uddfa\ud83c\uddf8 Introduction to Dynamic Programming", "content_html": "<h1>Introduction to Dynamic Programming</h1>\n<p>The essence of dynamic programming is to avoid repeated calculation.  Often, dynamic programming problems are naturall...</p>", "image": null, "date_modified": "2024-10-11T21:14:52+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/graph/bellman_ford.html", "url": "https://paulofilipe.com/cp-algorithms/graph/bellman_ford.html", "title": "\ud83c\uddfa\ud83c\uddf8 Bellman-Ford - finding shortest paths with negative weights", "content_html": "<h1>Bellman-Ford Algorithm</h1>\n<p><strong>Single source shortest path with negative weight edges</strong></p>\n<p>Suppose that we are given a weighted directed graph $G$ with $n$ vertic...</p>", "image": null, "date_modified": "2024-10-11T21:11:42+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/algebra/sieve-of-eratosthenes.html", "url": "https://paulofilipe.com/cp-algorithms/algebra/sieve-of-eratosthenes.html", "title": "\ud83c\uddfa\ud83c\uddf8 Sieve of Eratosthenes", "content_html": "<h1>Sieve of Eratosthenes</h1>\n<p>Sieve of Eratosthenes is an algorithm for finding all the prime numbers in a segment $[1;n]$ using $O(n \\log \\log n)$ operations.</p>\n<p>T...</p>", "image": null, "date_modified": "2024-10-11T07:03:16+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/graph/breadth-first-search.html", "url": "https://paulofilipe.com/cp-algorithms/graph/breadth-first-search.html", "title": "\ud83c\udde7\ud83c\uddf7 Busca em Largura (BFS)", "content_html": "<h1>Busca em Largura (BFS)</h1>\n<p>A busca em largura (BFS - Breadth First Search) \u00e9 um dos algoritmos de busca mais b\u00e1sicos e essenciais em grafos.</p>\n<p>Como resultado d...</p>", "image": null, "date_modified": "2024-10-10T17:59:56+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/string/string-hashing.html", "url": "https://paulofilipe.com/cp-algorithms/string/string-hashing.html", "title": "\ud83c\udde7\ud83c\uddf7 Hashing de Strings", "content_html": "<h1>Hashing de Strings</h1>\n<p>Algoritmos de hashing s\u00e3o \u00fateis na resolu\u00e7\u00e3o de diversos problemas.</p>\n<p>Queremos resolver o problema de comparar strings eficientemente.\nA...</p>", "image": null, "date_modified": "2024-10-10T15:31:24+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/data_structures/sqrt_decomposition.html", "url": "https://paulofilipe.com/cp-algorithms/data_structures/sqrt_decomposition.html", "title": "\ud83c\uddfa\ud83c\uddf8 Sqrt Decomposition", "content_html": "<h1>Sqrt Decomposition</h1>\n<p>Sqrt Decomposition is a method (or a data structure) that allows you to perform some common operations (finding sum of the elements of ...</p>", "image": null, "date_modified": "2024-10-01T02:06:32+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/graph/euler_path.html", "url": "https://paulofilipe.com/cp-algorithms/graph/euler_path.html", "title": "\ud83c\uddfa\ud83c\uddf8 Eulerian Path", "content_html": "<h1>Finding the Eulerian path in $O(M)$</h1>\n<p>A Eulerian path is a path in a graph that passes through all of its edges exactly once.\nA Eulerian cycle is a Eulerian...</p>", "image": null, "date_modified": "2024-09-14T02:18:10+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/algebra/factorial-modulo.html", "url": "https://paulofilipe.com/cp-algorithms/algebra/factorial-modulo.html", "title": "\ud83c\uddfa\ud83c\uddf8 Factorial modulo p", "content_html": "<h1>Factorial modulo $p$</h1>\n<p>In some cases it is necessary to consider complex formulas modulo some prime $p$, containing factorials in both numerator and denomin...</p>", "image": null, "date_modified": "2024-08-25T06:11:12+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/dynamic_programming/knapsack.html", "url": "https://paulofilipe.com/cp-algorithms/dynamic_programming/knapsack.html", "title": "\ud83c\uddfa\ud83c\uddf8 Knapsack Problem", "content_html": "<h1>Knapsack Problem</h1>\n<p>Prerequisite knowledge: <a href=\"https://cp-algorithms.com/dynamic_programming/intro-to-dp.html\">Introduction to Dynamic Programming</a></p>\n<h2>Introduc...</h2>", "image": null, "date_modified": "2024-08-15T23:48:29+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/algebra/extended-euclid-algorithm.html", "url": "https://paulofilipe.com/cp-algorithms/algebra/extended-euclid-algorithm.html", "title": "\ud83c\uddfa\ud83c\uddf8 Extended Euclidean Algorithm", "content_html": "<h1>Extended Euclidean Algorithm</h1>\n<p>While the <a href=\"euclid-algorithm.md\">Euclidean algorithm</a> calculates only the greatest common divisor (GCD) of two integers $a$ an...</p>", "image": null, "date_modified": "2024-08-15T07:16:54+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/string/suffix-array.html", "url": "https://paulofilipe.com/cp-algorithms/string/suffix-array.html", "title": "\ud83c\uddfa\ud83c\uddf8 Suffix Array", "content_html": "<h1>Suffix Array</h1>\n<h2>Definition</h2>\n<p>Let $s$ be a string of length $n$. The $i$-th suffix of $s$ is the substring $s[i \\ldots n - 1]$.</p>\n<p>A <strong>suffix array</strong> will con...</p>", "image": null, "date_modified": "2024-08-02T19:45:41+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/data_structures/fenwick.html", "url": "https://paulofilipe.com/cp-algorithms/data_structures/fenwick.html", "title": "\ud83c\uddfa\ud83c\uddf8 Fenwick Tree", "content_html": "<h1>Fenwick Tree</h1>\n<p>Let $f$ be some group operation (a binary associative function over a set with an identity element and inverse elements) and $A$ be an array ...</p>", "image": null, "date_modified": "2024-07-31T11:14:13+00:00", "authors": [], "tags": null}, {"id": "https://paulofilipe.com/cp-algorithms/graph/01_bfs.html", "url": "https://paulofilipe.com/cp-algorithms/graph/01_bfs.html", "title": "\ud83c\uddfa\ud83c\uddf8 0-1 BFS", "content_html": "<h1>0-1 BFS</h1>\n<p>It is well-known, that you can find the shortest paths between a single source and all other vertices in $O(|E|)$ using [Breadth First Search](bre...</p>", "image": null, "date_modified": "2024-07-28T21:47:47+00:00", "authors": [], "tags": null}]}